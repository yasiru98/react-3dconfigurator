{"version":3,"sources":["logo.svg","subaru/Subaru Impreza Free.glb","subaru/textures/camo.jpg","App.js","reportWebVitals.js","index.js"],"names":["textureChanged","App","canvasRef","useRef","appRef","useLayoutEffect","app","pc","current","start","setCanvasFillMode","setCanvasResolution","window","addEventListener","resizeCanvas","console","log","process","resource","texture","modelURL","subaru","entity","assets","loadFromUrl","err","asset","addComponent","model","meshInstances","setLocalPosition","root","addChild","name","newTex","_material","_diffuseMap","type","camera","clearColor","light","setPosition","setEulerAngles","on","deltaTime","rotate","children","id","ref","onClick","className","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAAe,MAA0B,iCCA1B,MAA0B,gDCA1B,MAA0B,iC,eCQrCA,GAAiB,EAmJNC,EAjJH,WACV,IAAMC,EAAYC,iBAAO,MACnBC,EAASD,iBAAO,MA+HtB,OAtHAE,2BAAgB,WACd,IAAMC,EAAM,IAAIC,IAAeL,EAAUM,QAAS,IAClDF,EAAIG,QAEJH,EAAII,kBAAkBH,IAA0B,GAChDD,EAAIK,oBAAoBJ,KAExBK,OAAOC,iBAAiB,UAAU,WAChCP,EAAIQ,kBAGNC,QAAQC,IAAIC,yBACZ,IAEIC,EAASC,EAFTC,EAAWC,EACXC,EAAS,IAAIf,IAIjBD,EAAIiB,OAAOC,YAAYJ,EAAU,SAAS,SAAUK,EAAKC,GACvDJ,EAAOK,aAAa,SACpBL,EAAOM,MAAMA,MAAQF,EAAMR,SAC3BA,EAAWQ,EAAMR,SAASW,cAAc,GACxCP,EAAOQ,iBAAiB,EAAG,GAAI,GAC/BvB,IAAOwB,KAAKC,SAASV,GACrBA,EAAOW,KAAO,MACdlB,QAAQC,IAAIU,GAEZpB,EAAIiB,OAAOC,YAAYU,EAAQ,WAAW,SAAUT,EAAKC,GACxDP,EAAUO,EAAMR,YAGjBQ,EAAMR,SAASW,cAAc,GAAGM,UAAUC,YAAejB,KAW/Db,EAAIiB,OAAOC,YAAYU,EAAQ,WAAW,SAAST,EAAKC,GAElD,OAAOR,KAcI,IAAIX,IAAU,QACtBoB,aAAa,QAAS,CACzBU,KAAM,QAGR,IAAMC,EAAS,IAAI/B,IAAU,UAC7B+B,EAAOX,aAAa,SAAU,CAC5BY,WAAY,IAAIhC,IAAS,GAAK,GAAK,MAGrC,IAAMiC,EAAQ,IAAIjC,IAAU,SAC5BiC,EAAMb,aAAa,SAGnBrB,EAAIyB,KAAKC,SAASM,GAClBhC,EAAIyB,KAAKC,SAASQ,GAElBF,EAAOG,YAAY,EAAG,EAAG,GACzBD,EAAME,eAAe,GAAI,EAAG,GAG5BpC,EAAIqC,GAAG,UAAU,SAAAC,GACftB,EAAOuB,OAAO,EAAG,GAAKD,EAAW,GACZ,GAAlB5C,GAGTe,QAAQC,IAAIV,EAAIyB,KAAKe,SAAS,OAgC1B1C,EAAOI,QAAUF,IAChB,IAGD,gCACE,wBAAQyC,GAAG,aAAaC,IAAK9C,IAC7B,wBAAQ+C,QAhIZ,WACElC,QAAQC,IAAI,mBACZhB,GAAiB,EACjBe,QAAQC,IAAIhB,IA6HV,4BACA,qBAAKkD,UAAU,MAAf,SAEE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,6DCvIKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a7f744e9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/Subaru Impreza Free.8b0a430b.glb\";","export default __webpack_public_path__ + \"static/media/camo.8047775f.jpg\";","import React, { useLayoutEffect, useRef } from \"react\";\nimport * as pc from \"playcanvas\";\nimport logo from \"./logo.svg\";\nimport subaru from \"./subaru/Subaru Impreza Free.glb\";\n\nimport newTex from \"./subaru/textures/camo.jpg\";\nimport \"./App.css\";\n\nvar textureChanged = false;\n\nconst App = () => {\n  const canvasRef = useRef(null);\n  const appRef = useRef(null);\n\n  function changeTexture(){\n    console.log(\"texture Changed\");\n    textureChanged = true;\n    console.log(textureChanged);\n \n  }\n\n  useLayoutEffect(() => {\n    const app = new pc.Application(canvasRef.current, {});\n    app.start();\n\n    app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW / 2);\n    app.setCanvasResolution(pc.RESOLUTION_AUTO);\n\n    window.addEventListener(\"resize\", function() {\n      app.resizeCanvas();\n    });\n\n    console.log(process.env.PUBLIC_URL);\n    var modelURL = subaru;\n    var entity = new pc.Entity();\n    var resource,texture;\n\n    // Using the vanilla engine version which doesn't return the asset object\n    app.assets.loadFromUrl(modelURL, \"model\", function (err, asset) {\n      entity.addComponent(\"model\");\n      entity.model.model = asset.resource;\n      resource = asset.resource.meshInstances[8];\n      entity.setLocalPosition(0, 0, -5);\n      pc.app.root.addChild(entity);\n      entity.name = \"car\";\n      console.log(asset);\n\n      app.assets.loadFromUrl(newTex, \"texture\", function (err, asset) {\n       texture = asset.resource;\n      });\n     \n      asset.resource.meshInstances[8]._material._diffuseMap  = texture;\n       \n      \n\n   \n     \n      \n\n    });\n\n \napp.assets.loadFromUrl(newTex, \"texture\", function(err, asset) {\n     // resource = asset.resource;\n      return resource\n    });\n  //  console.log(testure);\n\n \n\n    /* var entity = new pc.Entity();\n        var url = process.env.PUBLIC_URL + '/public/model/subaru.json';\n        app.assets.loadFromUrl(url, 'model', function (err, asset) {\n          entity.addComponent('model', { type: 'asset', asset: asset.resource });\n          app.root.addChild(entity);\n        });*/\n\n    //  console.log(carasset);\n    const cube = new pc.Entity(\"cube\");\n    cube.addComponent(\"model\", {\n      type: \"box\"\n    });\n\n    const camera = new pc.Entity(\"camera\");\n    camera.addComponent(\"camera\", {\n      clearColor: new pc.Color(0.1, 0.1, 0.1)\n    });\n\n    const light = new pc.Entity(\"light\");\n    light.addComponent(\"light\");\n\n    //  app.root.addChild(cube);\n    app.root.addChild(camera);\n    app.root.addChild(light);\n\n    camera.setPosition(0, 0, 3);\n    light.setEulerAngles(45, 0, 0);\n\n    \n    app.on(\"update\", deltaTime => {\n      entity.rotate(0, 20 * deltaTime, 0);\n      if(textureChanged == true){\n     //   console.log(\"texture needs change\");\n       // console.log(app.root.children[2].model.model.meshInstances[8]._material._diffuseMap)\nconsole.log(app.root.children[2]);\n        return;\n      }\n    });\n\n   \n     /* var utils = {};\n      window.utils = utils;\n      utils.loadGlbContainerFromUrl = function (url=subaru, options=\"null\", assetName='Subaru Impreza Free', callback) {\n        var filename = assetName + '.glb';\n        var file = {\n            url: url,\n            filename: filename\n        };\n\n        var asset = new pc.Asset(filename, 'container', file, null, options);\n        asset.once('load', function (containerAsset) {\n            if (callback) {\n                // As we play animations by name, if we have only one animation, keep it the same name as\n                // the original container otherwise, postfix it with a number\n          \n\n                callback(null, containerAsset);\n            }\n        });\n\n        app.assets.add(asset);\n        app.assets.load(asset);\n      \n        return asset;\n    };\n    console.log(utils);*/\n    appRef.current = app;\n  }, []);\n\n  return (\n    <div>\n      <canvas id=\"playCanvas\" ref={canvasRef} />\n      <button onClick={changeTexture} >Change Texture</button>\n      <div className=\"App\">\n\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>React UI Componenet</p>\n        \n        </header>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
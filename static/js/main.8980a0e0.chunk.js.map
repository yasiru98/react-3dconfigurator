{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","canvasRef","useRef","appRef","useLayoutEffect","app","pc","current","start","setCanvasFillMode","setCanvasResolution","window","addEventListener","resizeCanvas","cube","addComponent","type","camera","clearColor","light","root","addChild","setPosition","setEulerAngles","on","deltaTime","rotate","id","ref","className","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAAe,MAA0B,iC,eC8D1BA,EA1DH,WACV,IAAMC,EAAYC,iBAAO,MACnBC,EAASD,iBAAO,MAwCtB,OAtCAE,2BAAgB,WACd,IAAMC,EAAM,IAAIC,IAAeL,EAAUM,QAAS,IAClDF,EAAIG,QAELH,EAAII,kBAAkBH,IAAwB,GAC9CD,EAAIK,oBAAoBJ,KAEvBK,OAAOC,iBAAiB,UAAU,WAChCP,EAAIQ,kBAGN,IAAMC,EAAO,IAAIR,IAAU,QAC3BQ,EAAKC,aAAa,QAAS,CACzBC,KAAM,QAGR,IAAMC,EAAS,IAAIX,IAAU,UAC7BW,EAAOF,aAAa,SAAU,CAC5BG,WAAY,IAAIZ,IAAS,GAAK,GAAK,MAGrC,IAAMa,EAAQ,IAAIb,IAAU,SAC5Ba,EAAMJ,aAAa,SAEnBV,EAAIe,KAAKC,SAASP,GAClBT,EAAIe,KAAKC,SAASJ,GAClBZ,EAAIe,KAAKC,SAASF,GAElBF,EAAOK,YAAY,EAAG,EAAG,GACzBH,EAAMI,eAAe,GAAI,EAAG,GAE5BlB,EAAImB,GAAG,UAAU,SAACC,GAChBX,EAAKY,OAAO,GAAKD,EAAW,GAAKA,EAAW,GAAKA,MAGnDtB,EAAOI,QAAUF,IAChB,IAGD,gCACE,wBAAQsB,GAAG,aAAaC,IAAK3B,IAC7B,qBAAK4B,UAAU,MAAf,SACA,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,6DCxCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.8980a0e0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useLayoutEffect, useRef} from 'react';\nimport * as pc from 'playcanvas';\nimport logo from './logo.svg';\nimport './App.css';\nconst App = () => {\n  const canvasRef = useRef(null);\n  const appRef = useRef(null);\n\n  useLayoutEffect(() => {\n    const app = new pc.Application(canvasRef.current, {});\n    app.start();\n\n   app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW/2);\n   app.setCanvasResolution(pc.RESOLUTION_AUTO);\n    \n    window.addEventListener('resize', function () {\n      app.resizeCanvas();\n    });\n\n    const cube = new pc.Entity('cube');\n    cube.addComponent('model', {\n      type: 'box',\n    });\n\n    const camera = new pc.Entity('camera');\n    camera.addComponent('camera', {\n      clearColor: new pc.Color(0.1, 0.1, 0.1),\n    });\n\n    const light = new pc.Entity('light');\n    light.addComponent('light');\n\n    app.root.addChild(cube);\n    app.root.addChild(camera);\n    app.root.addChild(light);\n\n    camera.setPosition(0, 0, 3);\n    light.setEulerAngles(45, 0, 0);\n\n    app.on('update', (deltaTime) => {\n      cube.rotate(10 * deltaTime, 20 * deltaTime, 30 * deltaTime);\n    });\n\n    appRef.current = app;\n  }, []);\n\n  return (\n    <div>\n      <canvas id=\"playCanvas\" ref={canvasRef} />\n      <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          React UI Componenet\n        </p>\n      </header>\n    </div>\n    </div>\n    \n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}